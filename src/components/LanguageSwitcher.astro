---
import { languages } from '../i18n/languages';
import { getLangFromUrl, getLocalizedPath, removeLocaleFromPath } from '../i18n/utils';

const currentLang = getLangFromUrl(Astro.url);
const currentPath = removeLocaleFromPath(Astro.url.pathname);
---

<div class="language-switcher">
  <button class="lang-toggle" id="langToggle">
    <span class="current-lang">{languages[currentLang]}</span>
    <svg width="12" height="8" viewBox="0 0 12 8" fill="none">
      <path d="M1 1.5L6 6.5L11 1.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
  </button>
  
  <div class="lang-dropdown" id="langDropdown">
    {Object.entries(languages).map(([code, name]) => (
      <a 
        href={getLocalizedPath(currentPath, code)}
        class={`lang-option ${currentLang === code ? 'active' : ''}`}
        data-lang={code}
      >
        {name}
      </a>
    ))}
  </div>
</div>

<style>
  .language-switcher {
    position: relative;
    display: inline-block;
  }

  .lang-toggle {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    background: rgba(255, 255, 255, 0.9);
    border: 1px solid rgba(212, 175, 55, 0.2);
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 0.9rem;
    color: #2C3E50;
  }

  .lang-toggle:hover {
    background: rgba(255, 255, 255, 1);
    border-color: rgba(212, 175, 55, 0.4);
  }

  .lang-toggle svg {
    transition: transform 0.3s ease;
  }

  .lang-toggle.active svg {
    transform: rotate(180deg);
  }

  .lang-dropdown {
    position: absolute;
    top: 100%;
    right: 0;
    background: linear-gradient(135deg, 
      rgba(255, 255, 255, 0.95) 0%, 
      rgba(248, 250, 252, 0.95) 100%);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border: 1px solid rgba(212, 175, 55, 0.3);
    border-radius: 8px;
    box-shadow: 
      0 10px 40px rgba(0, 0, 0, 0.15),
      0 0 0 1px rgba(212, 175, 55, 0.1),
      inset 0 1px 0 rgba(255, 255, 255, 0.8);
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 1000;
    min-width: 140px;
    overflow: hidden;
  }

  .lang-dropdown::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 200%;
    height: 100%;
    background: linear-gradient(90deg, 
      transparent 0%, 
      rgba(212, 175, 55, 0.1) 50%, 
      transparent 100%);
    animation: shimmer 3s ease-in-out infinite;
  }

  .lang-dropdown.show {
    opacity: 1;
    visibility: visible;
    transform: translateY(2px);
  }

  .lang-option {
    display: block;
    padding: 0.8rem 1.2rem;
    color: #2C3E50;
    text-decoration: none;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    font-size: 0.9rem;
    position: relative;
    overflow: hidden;
  }

  .lang-option::before {
    content: '';
    position: absolute;
    left: -100%;
    top: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
      transparent 0%, 
      rgba(212, 175, 55, 0.15) 50%, 
      transparent 100%);
    transition: all 0.6s ease;
  }

  .lang-option::after {
    content: '→';
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%) translateX(10px);
    opacity: 0;
    transition: all 0.3s ease;
    color: #D4AF37;
    font-weight: bold;
  }

  .lang-option:hover {
    background: linear-gradient(90deg, 
      rgba(212, 175, 55, 0.1) 0%, 
      rgba(247, 220, 111, 0.1) 100%);
    color: #D4AF37;
    padding-left: 1.5rem;
  }

  .lang-option:hover::before {
    left: 100%;
  }

  .lang-option:hover::after {
    opacity: 1;
    transform: translateY(-50%) translateX(0);
  }

  .lang-option.active {
    background: linear-gradient(90deg, 
      rgba(212, 175, 55, 0.2) 0%, 
      rgba(247, 220, 111, 0.2) 50%,
      rgba(212, 175, 55, 0.2) 100%);
    color: #2C5282;
    font-weight: 500;
    border-left: 3px solid #D4AF37;
    padding-left: 1.5rem;
  }

  .lang-option.active::after {
    content: '●';
    opacity: 1;
    transform: translateY(-50%) translateX(0);
    color: #D4AF37;
    animation: pulse 2s ease-in-out infinite;
  }

  .lang-option:first-child {
    border-radius: 8px 8px 0 0;
  }

  .lang-option:last-child {
    border-radius: 0 0 8px 8px;
  }

  /* Animations */
  @keyframes shimmer {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
  }

  @keyframes pulse {
    0%, 100% { opacity: 1; transform: translateY(-50%) scale(1); }
    50% { opacity: 0.7; transform: translateY(-50%) scale(1.2); }
  }

  @media (max-width: 768px) {
    .lang-toggle {
      padding: 0.4rem 0.8rem;
      font-size: 0.8rem;
    }
    
    .lang-dropdown {
      right: 0;
      left: auto;
    }
  }
</style>

<script>
  const langToggle = document.getElementById('langToggle');
  const langDropdown = document.getElementById('langDropdown');

  langToggle?.addEventListener('click', (e) => {
    e.stopPropagation();
    langToggle.classList.toggle('active');
    langDropdown?.classList.toggle('show');
  });

  // Close dropdown when clicking outside
  document.addEventListener('click', () => {
    langToggle?.classList.remove('active');
    langDropdown?.classList.remove('show');
  });

  // Prevent dropdown from closing when clicking inside
  langDropdown?.addEventListener('click', (e) => {
    e.stopPropagation();
  });
</script>