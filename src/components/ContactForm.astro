---
import { getLangFromUrl, useTranslations } from '../i18n/utils';

interface Props {
  lang: string;
}

const { lang } = Astro.props;
const t = useTranslations(lang);
---

<div id="contactFormContainer">
  <div id="formMessage" class="form-message" style="display: none;"></div>
  
  <form class="professional-contact-form" id="contactForm">
    <div class="form-row">
      <div class="form-group">
        <label for="name">{t('contact.form.name')} *</label>
        <input type="text" id="name" name="name" required placeholder="Ismingizni kiriting...">
      </div>
      
      <div class="form-group">
        <label for="email">{t('contact.form.email')} *</label>
        <input type="email" id="email" name="email" required placeholder="email@example.com">
      </div>
    </div>
    
    <div class="form-row">
      <div class="form-group">
        <label for="phone">{t('contact.form.phone')}</label>
        <input type="tel" id="phone" name="phone" placeholder="+998 90 123 45 67">
      </div>
      
      <div class="form-group">
        <label for="city">{t('contact.form.city')}</label>
        <input type="text" id="city" name="city" placeholder={lang === 'es' ? 'ej. Madrid, Barcelona...' : lang === 'en' ? 'e.g. London, Manchester...' : lang === 'ru' ? 'напр. Москва, Санкт-Петербург...' : 'mas. Toshkent, Samarqand...'}>
      </div>
    </div>
    
    <div class="form-group">
      <label for="duration">{t('contact.form.duration')}</label>
      <select id="duration" name="duration">
        <option value="">{lang === 'es' ? 'Selecciona duración' : lang === 'en' ? 'Select duration' : lang === 'ru' ? 'Выберите продолжительность' : 'Davomiylikni tanlang'}</option>
        <option value="3-5">{lang === 'es' ? '3-5 días' : lang === 'en' ? '3-5 days' : lang === 'ru' ? '3-5 дней' : '3-5 kun'}</option>
        <option value="5-7">{lang === 'es' ? '5-7 días' : lang === 'en' ? '5-7 days' : lang === 'ru' ? '5-7 дней' : '5-7 kun'}</option>
        <option value="7-10">{lang === 'es' ? '7-10 días' : lang === 'en' ? '7-10 days' : lang === 'ru' ? '7-10 дней' : '7-10 kun'}</option>
        <option value="10+">{lang === 'es' ? 'Más de 10 días' : lang === 'en' ? 'More than 10 days' : lang === 'ru' ? 'Более 10 дней' : '10 kundan ko\'p'}</option>
      </select>
    </div>
    
    <div class="form-row">
      <div class="form-group">
        <label for="travelers">{t('contact.form.travelers')}</label>
        <select id="travelers" name="travelers">
          <option value="1">{lang === 'es' ? '1 persona' : lang === 'en' ? '1 person' : lang === 'ru' ? '1 человек' : '1 kishi'}</option>
          <option value="2">{lang === 'es' ? '2 personas' : lang === 'en' ? '2 people' : lang === 'ru' ? '2 человека' : '2 kishi'}</option>
          <option value="3-4">{lang === 'es' ? '3-4 personas' : lang === 'en' ? '3-4 people' : lang === 'ru' ? '3-4 человека' : '3-4 kishi'}</option>
          <option value="5+">{lang === 'es' ? '5+ personas' : lang === 'en' ? '5+ people' : lang === 'ru' ? '5+ человек' : '5+ kishi'}</option>
        </select>
      </div>
      
      <div class="form-group">
        <label for="budget">{t('contact.form.budget')}</label>
        <select id="budget" name="budget">
          <option value="">{lang === 'es' ? 'Selecciona presupuesto' : lang === 'en' ? 'Select budget' : lang === 'ru' ? 'Выберите бюджет' : 'Byudjetni tanlang'}</option>
          <option value="500-1000">500-1000 EUR</option>
          <option value="1000-2000">1000-2000 EUR</option>
          <option value="2000-3000">2000-3000 EUR</option>
          <option value="3000+">3000+ EUR</option>
        </select>
      </div>
    </div>
    
    <div class="form-group">
      <label for="interests">{t('contact.form.interests')}</label>
      <div class="checkbox-grid">
        <label class="checkbox-item">
          <input type="checkbox" name="interests" value="cultura">
          <span class="checkmark"></span>
          {lang === 'es' ? 'Cultura e historia' : lang === 'en' ? 'Culture and history' : lang === 'ru' ? 'Культура и история' : 'Madaniyat va tarix'}
        </label>
        <label class="checkbox-item">
          <input type="checkbox" name="interests" value="gastronomia">
          <span class="checkmark"></span>
          {lang === 'es' ? 'Gastronomía' : lang === 'en' ? 'Gastronomy' : lang === 'ru' ? 'Гастрономия' : 'Gastronomiya'}
        </label>
        <label class="checkbox-item">
          <input type="checkbox" name="interests" value="arquitectura">
          <span class="checkmark"></span>
          {lang === 'es' ? 'Arquitectura' : lang === 'en' ? 'Architecture' : lang === 'ru' ? 'Архитектура' : 'Me\'morchilik'}
        </label>
        <label class="checkbox-item">
          <input type="checkbox" name="interests" value="artesania">
          <span class="checkmark"></span>
          {lang === 'es' ? 'Artesanías' : lang === 'en' ? 'Handicrafts' : lang === 'ru' ? 'Ремесла' : 'Hunarmandchilik'}
        </label>
        <label class="checkbox-item">
          <input type="checkbox" name="interests" value="fotografia">
          <span class="checkmark"></span>
          {lang === 'es' ? 'Fotografía' : lang === 'en' ? 'Photography' : lang === 'ru' ? 'Фотография' : 'Fotografiya'}
        </label>
        <label class="checkbox-item">
          <input type="checkbox" name="interests" value="aventura">
          <span class="checkmark"></span>
          {lang === 'es' ? 'Aventura' : lang === 'en' ? 'Adventure' : lang === 'ru' ? 'Приключения' : 'Sarguzasht'}
        </label>
      </div>
    </div>
    
    <div class="form-group">
      <label for="message">{t('contact.form.message')}</label>
      <textarea id="message" name="message" rows="4" placeholder={lang === 'es' ? 'Cuéntanos más sobre tu viaje ideal, fechas preferidas, necesidades especiales...' : lang === 'en' ? 'Tell us more about your ideal trip, preferred dates, special needs...' : lang === 'ru' ? 'Расскажите больше о вашем идеальном путешествии, предпочтительных датах, особых потребностях...' : 'Ideal sayohatingiz, afzal sanagan sanalar, maxsus ehtiyojlar haqida batafsil ma\'lumot bering...'}></textarea>
    </div>
    
    <button type="submit" class="submit-btn" id="submitBtn">
      <span class="btn-text">{t('contact.form.submit')}</span>
      <span class="btn-loading" style="display: none;">
        <svg class="spinner" width="16" height="16" viewBox="0 0 24 24" fill="none">
          <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" stroke-opacity="0.3"></circle>
          <path d="M12 2a10 10 0 0 1 10 10" stroke="currentColor" stroke-width="4"></path>
        </svg>
        {lang === 'es' ? 'Enviando...' : lang === 'en' ? 'Sending...' : lang === 'ru' ? 'Отправка...' : 'Jo\'natilmoqda...'}
      </span>
    </button>
  </form>
</div>

<style>
  /* Professional Form Styles */
  .professional-contact-form {
    max-width: 100%;
    margin: 0 auto;
  }

  .form-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1.5rem;
    margin-bottom: 1rem;
  }

  .form-group {
    margin-bottom: 2rem;
    position: relative;
  }

  /* Minimalist Labels */
  .form-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
    font-size: 0.9rem;
    color: #1A365D;
    letter-spacing: 0.3px;
  }

  /* Clean Input Fields */
  .form-group input,
  .form-group select,
  .form-group textarea {
    width: 100%;
    padding: 0.75rem 1rem;
    border: 1px solid #E2E8F0;
    border-radius: 6px;
    font-size: 0.95rem;
    background: #FFFFFF;
    color: #2C3E50;
    transition: all 0.2s ease;
    font-family: inherit;
    outline: none;
  }

  .form-group input::placeholder,
  .form-group textarea::placeholder {
    color: #A0AEC0;
  }

  .form-group input:focus,
  .form-group select:focus,
  .form-group textarea:focus {
    border-color: #D4AF37;
    box-shadow: 0 0 0 3px rgba(212, 175, 55, 0.1);
  }

  .form-group textarea {
    resize: vertical;
    min-height: 100px;
  }

  .form-group select {
    cursor: pointer;
    appearance: none;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 0.5rem center;
    background-repeat: no-repeat;
    background-size: 1.5em 1.5em;
    padding-right: 2.5rem;
  }

  /* Enhanced Core Interests Section */
  .interests-section {
    margin-top: 1rem;
    padding: 2rem;
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    border-radius: 12px;
    border: 1px solid #e2e8f0;
    position: relative;
    overflow: hidden;
  }

  .interests-section::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, #D4AF37, #F7DC6F, #D4AF37);
  }

  .interests-header {
    text-align: center;
    margin-bottom: 1.5rem;
  }

  .interests-title {
    font-size: 1.1rem;
    font-weight: 600;
    color: #1A365D;
    margin-bottom: 0.5rem;
  }

  .interests-subtitle {
    font-size: 0.85rem;
    color: #64748b;
    font-style: italic;
  }

  .interests-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 1.5rem;
    margin-top: 1.5rem;
  }

  .interest-category {
    background: white;
    border-radius: 8px;
    padding: 1.5rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
    border: 1px solid #f1f5f9;
    transition: all 0.3s ease;
  }

  .interest-category:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
    border-color: #D4AF37;
  }

  .category-header {
    display: flex;
    align-items: center;
    margin-bottom: 1rem;
    padding-bottom: 0.75rem;
    border-bottom: 1px solid #f1f5f9;
  }

  .category-icon {
    width: 32px;
    height: 32px;
    background: linear-gradient(135deg, #D4AF37, #F7DC6F);
    border-radius: 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 0.75rem;
    font-size: 1rem;
  }

  .category-title {
    font-size: 0.95rem;
    font-weight: 600;
    color: #1e293b;
    margin: 0;
  }

  .interest-options {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .interest-item {
    display: flex;
    align-items: center;
    padding: 0.5rem 0.75rem;
    border-radius: 6px;
    transition: all 0.2s ease;
    cursor: pointer;
    position: relative;
  }

  .interest-item:hover {
    background: #f8fafc;
    transform: translateX(4px);
  }

  .interest-item input[type="checkbox"] {
    width: 16px;
    height: 16px;
    margin-right: 0.75rem;
    accent-color: #D4AF37;
    cursor: pointer;
  }

  .interest-label {
    font-size: 0.9rem;
    color: #475569;
    font-weight: 400;
    cursor: pointer;
    user-select: none;
  }

  .interest-item input[type="checkbox"]:checked + .interest-label {
    color: #1e293b;
    font-weight: 500;
  }

  /* Selection Counter */
  .selection-counter {
    text-align: center;
    margin-top: 1.5rem;
    padding: 1rem;
    background: white;
    border-radius: 8px;
    border: 1px solid #e2e8f0;
  }

  .counter-text {
    font-size: 0.85rem;
    color: #64748b;
  }

  .counter-number {
    font-weight: 600;
    color: #D4AF37;
  }

  /* Clean Submit Button */
  .submit-btn {
    width: 100%;
    padding: 0.875rem 2rem;
    background: #D4AF37;
    border: none;
    border-radius: 6px;
    color: #1A365D;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    margin-top: 1.5rem;
  }

  .submit-btn:hover {
    background: #B8860B;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(212, 175, 55, 0.3);
  }

  .submit-btn:disabled {
    opacity: 0.7;
    cursor: not-allowed;
    transform: none;
  }

  .btn-loading {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    justify-content: center;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .form-row {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .interests-grid {
      grid-template-columns: 1fr;
      gap: 1.25rem;
    }

    .interests-section {
      padding: 1.5rem;
    }

    .interest-category {
      padding: 1.25rem;
    }

    .category-header {
      margin-bottom: 0.75rem;
    }

    .interest-options {
      gap: 0.5rem;
    }

    .form-group input,
    .form-group select,
    .form-group textarea {
      padding: 0.75rem;
    }

    .submit-btn {
      padding: 0.875rem 1.5rem;
    }
  }

  @media (max-width: 480px) {
    .form-group {
      margin-bottom: 1.25rem;
    }

    .interests-grid {
      grid-template-columns: 1fr;
    }

    .interests-section {
      padding: 1rem;
      margin-left: -0.5rem;
      margin-right: -0.5rem;
    }

    .interest-category {
      padding: 1rem;
    }

    .category-icon {
      width: 28px;
      height: 28px;
      font-size: 0.9rem;
    }

    .category-title {
      font-size: 0.9rem;
    }

    .interest-label {
      font-size: 0.85rem;
    }
  }

  /* Ultra-wide screens */
  @media (min-width: 1400px) {
    .interests-grid {
      grid-template-columns: repeat(3, 1fr);
      gap: 2rem;
    }

    .interests-section {
      padding: 2.5rem;
    }
  }

  /* Tablet landscape */
  @media (min-width: 769px) and (max-width: 1024px) {
    .interests-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 1.5rem;
    }
  }

  .spinner {
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
</style>

<script>
  import { supabase } from '../lib/supabase';

  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contactForm') as HTMLFormElement;
    const messageDiv = document.getElementById('formMessage') as HTMLDivElement;
    const submitBtn = document.getElementById('submitBtn') as HTMLButtonElement;
    const btnText = submitBtn.querySelector('.btn-text') as HTMLSpanElement;
    const btnLoading = submitBtn.querySelector('.btn-loading') as HTMLSpanElement;
    
    // Interest selection counter
    const checkboxes = document.querySelectorAll('input[name="interests"]');
    const counterElement = document.querySelector('.counter-number');
    
    function updateCounter() {
      const checkedCount = document.querySelectorAll('input[name="interests"]:checked').length;
      if (counterElement) {
        counterElement.textContent = checkedCount.toString();
      }
    }
    
    checkboxes.forEach(checkbox => {
      checkbox.addEventListener('change', updateCounter);
    });
    
    // Initialize counter
    updateCounter();

    function showMessage(message: string, type: 'success' | 'error' | 'loading') {
      messageDiv.textContent = message;
      messageDiv.className = `form-message ${type}`;
      messageDiv.style.display = 'block';
      messageDiv.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
    }

    function hideMessage() {
      messageDiv.style.display = 'none';
    }

    function setLoading(loading: boolean) {
      if (loading) {
        submitBtn.disabled = true;
        btnText.style.display = 'none';
        btnLoading.style.display = 'flex';
      } else {
        submitBtn.disabled = false;
        btnText.style.display = 'inline';
        btnLoading.style.display = 'none';
      }
    }

    form?.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      // Check if Supabase is available
      if (!supabase) {
        const lang = document.documentElement.lang || 'es';
        const errorMessages = {
          es: 'El servicio no está disponible en este momento. Por favor, contáctanos directamente por email o WhatsApp.',
          en: 'Service is not available at the moment. Please contact us directly via email or WhatsApp.',
          ru: 'Сервис временно недоступен. Пожалуйста, свяжитесь с нами напрямую по электронной почте или WhatsApp.',
          uz: 'Xizmat hozirda mavjud emas. Iltimos, email yoki WhatsApp orqali to\'g\'ridan-to\'g\'ri bog\'laning.'
        };
        
        showMessage(errorMessages[lang] || errorMessages.es, 'error');
        setLoading(false);
        return;
      }
      
      hideMessage();
      setLoading(true);

      try {
        // Collect form data
        const formData = new FormData(form);
        const data: any = Object.fromEntries(formData.entries());
        
        // Get all checked interests
        const interests = Array.from(document.querySelectorAll('input[name="interests"]:checked'))
          .map((checkbox: any) => checkbox.value);
        
        // Prepare submission data
        const submission = {
          name: data.name,
          email: data.email,
          phone: data.phone || null,
          city: data.city || null,
          duration: data.duration || null,
          travelers: data.travelers || null,
          budget: data.budget || null,
          interests: interests,
          message: data.message || null,
          status: 'new'
        };

        // Submit to Supabase
        const { error } = await supabase
          .from('contact_submissions')
          .insert([submission]);

        if (error) {
          throw error;
        }

        // Success
        const lang = document.documentElement.lang || 'es';
        const successMessages = {
          es: '¡Gracias por tu consulta! Te responderemos en las próximas 24 horas.',
          en: 'Thank you for your inquiry! We will respond within 24 hours.',
          ru: 'Спасибо за ваш запрос! Мы ответим в течение 24 часов.',
          uz: 'So\'rovingiz uchun rahmat! Biz 24 soat ichida javob beramiz.'
        };
        
        showMessage(successMessages[lang] || successMessages.es, 'success');
        form.reset();
        updateCounter(); // Reset counter after form reset

      } catch (error) {
        console.error('Error submitting form:', error);
        
        const lang = document.documentElement.lang || 'es';
        const errorMessages = {
          es: 'Hubo un error al enviar tu consulta. Por favor, inténtalo de nuevo o contáctanos directamente.',
          en: 'There was an error sending your inquiry. Please try again or contact us directly.',
          ru: 'Произошла ошибка при отправке вашего запроса. Пожалуйста, попробуйте еще раз или свяжитесь с нами напрямую.',
          uz: 'So\'rovni yuborishda xatolik yuz berdi. Iltimos, qayta urinib ko\'ring yoki to\'g\'ridan-to\'g\'ri bog\'laning.'
        };
        
        showMessage(errorMessages[lang] || errorMessages.es, 'error');
      } finally {
        setLoading(false);
      }
    });
  });
</script>